#include "ppu-protocol-local.h"
#include "../pins.h"
#include <stdio.h>


unsigned char YUV[192] = {
	0x66, 0x66, 0x66, 0x00, 0x2a, 0x88, 0x14, 0x12, 
	0xa7, 0x3b, 0x00, 0xa4, 0x5c, 0x00, 0x7e, 0x6e, 
	0x00, 0x40, 0x6c, 0x07, 0x00, 0x56, 0x1d, 0x00, 
	0x33, 0x35, 0x00, 0x0c, 0x48, 0x00, 0x00, 0x52, 
	0x00, 0x00, 0x4f, 0x08, 0x00, 0x40, 0x4d, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xad, 0xad, 0xad, 0x15, 0x5f, 0xd9, 0x42, 0x40, 
	0xff, 0x75, 0x27, 0xfe, 0xa0, 0x1a, 0xcc, 0xb7, 
	0x1e, 0x7b, 0xb5, 0x31, 0x20, 0x99, 0x4e, 0x00, 
	0x6b, 0x6d, 0x00, 0x38, 0x87, 0x00, 0x0d, 0x93, 
	0x00, 0x00, 0x8f, 0x32, 0x00, 0x7c, 0x8d, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0x64, 0xb0, 0xff, 0x92, 0x90, 
	0xff, 0xc6, 0x76, 0xff, 0xf2, 0x6a, 0xff, 0xff, 
	0x6e, 0xcc, 0xff, 0x81, 0x70, 0xea, 0x9e, 0x22, 
	0xbc, 0xbe, 0x00, 0x88, 0xd8, 0x00, 0x5c, 0xe4, 
	0x30, 0x45, 0xe0, 0x82, 0x48, 0xcd, 0xde, 0x4f, 
	0x4f, 0x4f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0xff, 0xff, 0xff, 0xc0, 0xdf, 0xff, 0xd3, 0xd2, 
	0xff, 0xe8, 0xc8, 0xff, 0xfa, 0xc2, 0xff, 0xff, 
	0xc4, 0xea, 0xff, 0xcc, 0xc5, 0xf7, 0xd8, 0xa5, 
	0xe4, 0xe5, 0x94, 0xcf, 0xef, 0x96, 0xbd, 0xf4, 
	0xab, 0xb3, 0xf3, 0xcc, 0xb5, 0xeb, 0xf2, 0xb8, 
	0xb8, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};


int main(int argc, char** argv) {

    uint8_t palette[] = {0x00, 0x16, 0x2D, 0x30};

    #define CX 16
    #define CY 23

    uint8_t oam_fill[] = {
        CY+(0*10), 0xB8, 0, CX+(2*8),
        CY+(0*10), 0xBA, 0, CX+(3*8),
        CY+(1*10), 'C', 0, CX+(0*8),
        CY+(1*10), '0', 0, CX+(2*8),
        CY+(1*10), '0', 0, CX+(3*8),
        CY+(2*10), 0xB9, 0, CX+(2*8),
        CY+(2*10), 0xBB, 0, CX+(3*8),
        CY+(4*10), 0xBA, 0, CX+(2*8),
        CY+(4*10), 0xB8, 0, CX+(3*8),
        CY+(4*10), 0xBB, 0, CX+(4*8),
        CY+(4*10), '+', 0, CX+(5*8),
        CY+(4*10), 0xB1, 0, CX+(6*8),
        CY+(5*10), 'E', 0, CX+(0*8),
        CY+(5*10), '0', 0, CX+(2*8),
        CY+(5*10), '0', 0, CX+(3*8),
        CY+(5*10), '0', 0, CX+(4*8),
        CY+(7*10), 0xB0, 0, CX+(2*8),
        CY+(8*10), 'S', 0, CX+(0*8),
        CY+(8*10), '0', 0, CX+(2*8),
        CY+(10*10),'H', 0, CX+(0*8),
        CY+(10*10),0xB2, 0, CX+(2*8),
        CY+(10*10),0xB3, 0, CX+(3*8),
        CY+(10*10),0xB4, 0, CX+(4*8)
    };    

    oamDma(oam_fill, 23*4);

    ppuAddr(0x3F00);
    for(uint8_t y = 16; y > 0; y--) {
        for(uint8_t x = 0; x < 4; x++) {
            ppuDataWrite(palette[x]);
        }
    }

  	ppuAddr(0x2000);
    for(uint8_t y = 16; y > 0; y--) {
        for(uint8_t x = 0; x < 255; x++) {
            ppuDataWrite(0);
        }
    }

    ppuCtrl(0x80);
    ppuMask(0b00011110);

    FILE* f = fopen("../tests/ppu-color-test/test.chr", "rb");
    fread(chr, 0x1000, 1, f);
    fclose(f);

    uint8_t line_buffer[256];
    printf("P3\n256 240 255\n");

    for (int y = 0; y < 240; y++) {
        nes_ppu_scanline(line_buffer, y);

        for (int x = 0; x < 256; x++) {
            uint8_t * rgb = YUV + line_buffer[x] * 3;
            printf("%d %d %d ", rgb[0], rgb[1], rgb[2]);
        }
    }

    return 0;
}

